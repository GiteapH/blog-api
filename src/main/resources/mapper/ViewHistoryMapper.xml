<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.springboot.blog.dao.ViewHistoryMapper">
  <resultMap id="BaseResultMap" type="cn.springboot.blog.entity.ViewHistory">
    <id column="h_id" jdbcType="INTEGER" property="hId" />
    <result column="h_uid" jdbcType="INTEGER" property="hUid" />
    <result column="h_type" jdbcType="TINYINT" property="hType" />
    <result column="h_t_id" jdbcType="INTEGER" property="hTId" />
    <result column="h_date" jdbcType="TIMESTAMP" property="hDate" />
    <result column="h_machine" jdbcType="TINYINT" property="hMachine" />
  </resultMap>
  <resultMap id="WithArticle" type="cn.springboot.blog.entity.ViewHistoryWithArticle" extends="BaseResultMap">
    <id column="aid" jdbcType="INTEGER" property="aid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="like" jdbcType="VARCHAR" property="like" />
    <result column="comments" jdbcType="INTEGER" property="comments" />
    <result column="watched" jdbcType="INTEGER" property="watched" />
    <result column="collected" jdbcType="VARCHAR" property="collected" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="articles" jdbcType="LONGVARCHAR" property="articles" />
    <result column="classPer" jdbcType="LONGVARCHAR" property="classper" />
    <result column="classSys" jdbcType="LONGVARCHAR" property="classsys" />
    <result column="tinyMes" jdbcType="LONGVARCHAR" property="tinymes" />
    <result column="classSys" jdbcType="LONGVARCHAR" property="classsys" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    h_id, h_uid, h_type, h_t_id, h_date, h_machine
  </sql>
  <sql id="With_Article">
    h_id, h_uid, h_type, h_t_id, h_date, h_machine,uid, aid, date, `like`, comments, watched, collected, title,  articles, classPer, classSys, tinyMes
  </sql>
  <select id="selectByExample" parameterType="cn.springboot.blog.entity.ViewHistoryExample" resultMap="WithArticle">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="With_Article" />
    from view_history
    inner join articles on view_history.h_t_id=articles.aid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="search != null">
      and (title like concat('%',#{search},'%')
      or  tinyMes like concat('%',#{search},'%'))
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause} desc
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from view_history
    where h_t_id = #{htid} and h_uid = #{huid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from view_history
    where h_id = #{hId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.springboot.blog.entity.ViewHistoryExample">
    delete from view_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.springboot.blog.entity.ViewHistory">
    insert into view_history (h_id, h_uid, h_type, 
      h_t_id, h_date, h_machine
      )
    values (#{hId,jdbcType=INTEGER}, #{hUid,jdbcType=INTEGER}, #{hType,jdbcType=TINYINT}, 
      #{hTId,jdbcType=INTEGER}, #{hDate,jdbcType=TIMESTAMP}, #{hMachine,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.springboot.blog.entity.ViewHistory">
    insert into view_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hId != null">
        h_id,
      </if>
      <if test="hUid != null">
        h_uid,
      </if>
      <if test="hType != null">
        h_type,
      </if>
      <if test="hTId != null">
        h_t_id,
      </if>
      <if test="hDate != null">
        h_date,
      </if>
      <if test="hMachine != null">
        h_machine,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hId != null">
        #{hId,jdbcType=INTEGER},
      </if>
      <if test="hUid != null">
        #{hUid,jdbcType=INTEGER},
      </if>
      <if test="hType != null">
        #{hType,jdbcType=TINYINT},
      </if>
      <if test="hTId != null">
        #{hTId,jdbcType=INTEGER},
      </if>
      <if test="hDate != null">
        #{hDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hMachine != null">
        #{hMachine,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.springboot.blog.entity.ViewHistoryExample" resultType="java.lang.Long">
    select count(*) from view_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update view_history
    <set>
      <if test="row.hId != null">
        h_id = #{row.hId,jdbcType=INTEGER},
      </if>
      <if test="row.hUid != null">
        h_uid = #{row.hUid,jdbcType=INTEGER},
      </if>
      <if test="row.hType != null">
        h_type = #{row.hType,jdbcType=TINYINT},
      </if>
      <if test="row.hTId != null">
        h_t_id = #{row.hTId,jdbcType=INTEGER},
      </if>
      <if test="row.hDate != null">
        h_date = #{row.hDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.hMachine != null">
        h_machine = #{row.hMachine,jdbcType=TINYINT},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update view_history
    set h_id = #{row.hId,jdbcType=INTEGER},
      h_uid = #{row.hUid,jdbcType=INTEGER},
      h_type = #{row.hType,jdbcType=TINYINT},
      h_t_id = #{row.hTId,jdbcType=INTEGER},
      h_date = #{row.hDate,jdbcType=TIMESTAMP},
      h_machine = #{row.hMachine,jdbcType=TINYINT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.springboot.blog.entity.ViewHistory">
    update view_history
    <set>
      <if test="hUid != null">
        h_uid = #{hUid,jdbcType=INTEGER},
      </if>
      <if test="hType != null">
        h_type = #{hType,jdbcType=TINYINT},
      </if>
      <if test="hTId != null">
        h_t_id = #{hTId,jdbcType=INTEGER},
      </if>
      <if test="hDate != null">
        h_date = #{hDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hMachine != null">
        h_machine = #{hMachine,jdbcType=TINYINT},
      </if>
    </set>
    where h_id = #{hId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.springboot.blog.entity.ViewHistory">
    update view_history
    set h_uid = #{hUid,jdbcType=INTEGER},
      h_type = #{hType,jdbcType=TINYINT},
      h_t_id = #{hTId,jdbcType=INTEGER},
      h_date = #{hDate,jdbcType=TIMESTAMP},
      h_machine = #{hMachine,jdbcType=TINYINT}
    where h_id = #{hId,jdbcType=INTEGER}
  </update>
</mapper>